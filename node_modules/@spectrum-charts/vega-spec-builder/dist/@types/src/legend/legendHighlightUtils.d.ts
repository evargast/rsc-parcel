import { Mark, NumericValueRef } from 'vega';
/**
 * Adds opacity tests for the fill and stroke of marks that use the color scale to set the fill or stroke value.
 */
export declare const setHoverOpacityForMarks: (marks: Mark[], keys?: string[], name?: string) => void;
export declare const getHighlightOpacityRule: (keys?: string[], name?: string) => {
    test?: string;
} & NumericValueRef;
/**
 * Determines if the supplied mark uses the color scale to set the fill or stroke value.
 * This is used to determine if we need to set the opacity for the mark when it is hovered
 * @param mark
 * @returns boolean
 */
export declare const markUsesSeriesColorScale: (mark: Mark) => boolean;
/**
 * Recursively flattens all nested marks into a flat array
 * @param marks
 * @returns
 */
export declare const flattenMarks: (marks: Mark[]) => Mark[];
//# sourceMappingURL=legendHighlightUtils.d.ts.map