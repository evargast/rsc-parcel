/// <reference types="vega" />
export declare const defaultDodgedMark: {
    name: string;
    type: string;
    from: {
        facet: {
            data: string;
            groupby: string;
            name: string;
        };
    };
    signals: {
        name: string;
        update: string;
    }[];
    scales: {
        domain: {
            data: string;
            field: string;
        };
        name: string;
        paddingInner: number;
        range: string;
        type: string;
    }[];
    encode: {
        enter: {
            x: {
                field: string;
                scale: string;
            };
        };
    };
    marks: import("vega", { with: { "resolution-mode": "import" } }).RectMark[];
};
export declare const annotationDodgedMarks: {
    marks: (import("vega", { with: { "resolution-mode": "import" } }).RectMark | {
        from: {
            data: string;
        };
        encode: {
            enter: {
                xc: {
                    scale: string;
                    field: string;
                    band: number;
                };
                yc: ({
                    test: string;
                    signal: string;
                } | {
                    signal: string;
                    test?: undefined;
                })[];
                fill: {
                    test: string;
                    signal: string;
                }[];
                align: {
                    value: string;
                };
                baseline: {
                    value: string;
                };
                height: {
                    value: number;
                };
                width: {
                    signal: string;
                };
                cornerRadius: {
                    value: number;
                };
            };
        };
        type: string;
        name: string;
        interactive: boolean;
    } | {
        from: {
            data: string;
        };
        encode: {
            enter: {
                x: {
                    scale: string;
                    field: string;
                    band: number;
                };
                y: ({
                    test: string;
                    signal: string;
                } | {
                    signal: string;
                    test?: undefined;
                })[];
                text: {
                    test: string;
                    field: string;
                }[];
                fontSize: {
                    value: number;
                };
                fontWeight: {
                    value: string;
                };
                baseline: {
                    value: string;
                };
                align: {
                    value: string;
                };
            };
        };
        type: string;
        name: string;
        interactive: boolean;
    })[];
    name: string;
    type: string;
    from: {
        facet: {
            data: string;
            groupby: string;
            name: string;
        };
    };
    signals: {
        name: string;
        update: string;
    }[];
    scales: {
        domain: {
            data: string;
            field: string;
        };
        name: string;
        paddingInner: number;
        range: string;
        type: string;
    }[];
    encode: {
        enter: {
            x: {
                field: string;
                scale: string;
            };
        };
    };
};
//# sourceMappingURL=dodgedBarUtils.test.d.ts.map