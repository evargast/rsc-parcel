{"version":3,"file":"index.js","mappings":";CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAA6B,oBAAID,IAEjCD,EAA0B,oBAAIC,GAC/B,CATD,CASGK,MAAM,IACT,mhBCEA,sgBCAA,8GCMa,EAAAC,aAAe,CAACC,EAA2BC,IAGhD,CAACD,EADPC,GAAaD,EAAaC,EAAUC,OAAO,GAAGC,cAAgBF,EAAUG,MAAM,GAAKH,GAC5CI,OAAOC,SAASC,KAAK,IAQ9D,uBAA4BC,GAC3B,MAAMC,EAAQD,EAAIE,MAAM,6DACxB,OAAID,EACIA,EACLE,KAAI,CAACC,EAAMC,IACD,IAANA,EAAgBD,EAAKE,cAClBF,EAAKV,OAAO,GAAGC,cAAgBS,EAAKR,MAAM,GAAGU,gBAEpDP,KAAK,IAEDC,CACR,ICvCIO,EAA2B,CAAC,SAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaxB,QAGrB,IAAIC,EAASoB,EAAyBE,GAAY,CAGjDvB,QAAS,CAAC,GAOX,OAHA0B,EAAoBH,GAAUI,KAAK1B,EAAOD,QAASC,EAAQA,EAAOD,QAASsB,GAGpErB,EAAOD,OACf,CCnB0BsB,CAAoB,MLO9C","sources":["webpack://spectrumChartsUtils/webpack/universalModuleDefinition","webpack://spectrumChartsUtils/./index.ts","webpack://spectrumChartsUtils/./src/index.ts","webpack://spectrumChartsUtils/./src/utils.ts","webpack://spectrumChartsUtils/webpack/bootstrap","webpack://spectrumChartsUtils/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"spectrumChartsUtils\"] = factory();\n\telse\n\t\troot[\"spectrumChartsUtils\"] = factory();\n})(this, () => {\nreturn ","/*\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport * from './src';\n","/*\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport * from './utils';\n","/*\n * Copyright 2025 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n/**\n * Combines a parent name and a child name into a single string\n * @param parentName - The parent name\n * @param childName - The child name\n * @returns The combined name\n */\nexport const combineNames = (parentName: string | null, childName: string | null): string => {\n\tconst formattedChildName =\n\t\tchildName && parentName ? childName.charAt(0).toUpperCase() + childName.slice(1) : childName;\n\treturn [parentName, formattedChildName].filter(Boolean).join('');\n};\n\n/**\n * Converts a string to camel case\n * @param str - The string to convert\n * @returns The camel case string\n */\nexport function toCamelCase(str: string) {\n\tconst words = str.match(/[A-Z]{2,}(?=[A-Z][a-z]+\\d*|\\b)|[A-Z]?[a-z]+\\d*|[A-Z]|\\d+/g);\n\tif (words) {\n\t\treturn words\n\t\t\t.map((word, i) => {\n\t\t\t\tif (i === 0) return word.toLowerCase();\n\t\t\t\treturn word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\n\t\t\t})\n\t\t\t.join('');\n\t}\n\treturn str;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(938);\n"],"names":["root","factory","exports","module","define","amd","this","combineNames","parentName","childName","charAt","toUpperCase","slice","filter","Boolean","join","str","words","match","map","word","i","toLowerCase","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}