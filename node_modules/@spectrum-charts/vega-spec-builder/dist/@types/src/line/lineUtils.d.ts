import { BarAnnotationOptions, ChartPopoverOptions, ChartTooltipOptions, ColorFacet, ColorScheme, DonutSummaryOptions, HighlightedItem, InteractionMode, LineTypeFacet, LineWidthFacet, MetricRangeOptions, OpacityFacet, ScaleType, ScatterPathOptions, SegmentLabelOptions, TrendlineOptions } from '../types';
export declare const getPopoverMarkName: (chartPopovers: ChartPopoverOptions[], lineName: string) => string | undefined;
export interface LineMarkOptions {
    barAnnotations?: BarAnnotationOptions[];
    chartPopovers?: ChartPopoverOptions[];
    chartTooltips?: ChartTooltipOptions[];
    color: ColorFacet;
    colorScheme: ColorScheme;
    dimension: string;
    displayOnHover?: boolean;
    donutSummaries?: DonutSummaryOptions[];
    hasOnClick?: boolean;
    highlightedItem?: HighlightedItem;
    idKey: string;
    interactiveMarkName?: string;
    interactionMode?: InteractionMode;
    isHighlightedByDimension?: boolean;
    isHighlightedByGroup?: boolean;
    lineType: LineTypeFacet;
    lineWidth?: LineWidthFacet;
    metric: string;
    metricAxis?: string;
    metricRanges?: MetricRangeOptions[];
    name: string;
    opacity: OpacityFacet;
    popoverMarkName?: string;
    scaleType: ScaleType;
    scatterPaths?: ScatterPathOptions[];
    segmentLabels?: SegmentLabelOptions[];
    staticPoint?: string;
    trendlines?: TrendlineOptions[];
}
//# sourceMappingURL=lineUtils.d.ts.map