import { ColorScheme, HighlightedItem } from '../chartSpec.types';
import { ChartPopoverOptions } from '../dialogs/chartPopoverSpec.types';
import { ChartTooltipOptions } from '../dialogs/chartTooltipSpec.types';
import { ColorFacet, LineTypeFacet, LineWidthFacet, OpacityFacet, PartiallyRequired, ScaleType, SymbolSizeFacet } from '../specUtil.types';
import { ScatterPathOptions } from './supplemental/scatterPathSpec.types';
import { TrendlineOptions } from './supplemental/trendlineSpec.types';
export interface ScatterOptions {
    markType: 'scatter';
    /** Sets the name of the component. */
    name?: string;
    /** Key in the data that is used as the metric */
    metric?: string;
    /**
     * point fill and stroke color
     * uses a key in the data that will map to the color scale or a static color value
     */
    color?: ColorFacet;
    /**
     * type of color scale that should be used for the points
     * use ordinal if the key used for `color` maps to string values ('UT', 'CA', 'NY', etc.)
     * use linear if the key used for `color` maps to numeric values (0, 1, 2, etc.)
     */
    colorScaleType?: 'linear' | 'ordinal';
    /** data key for the x-axis */
    dimension?: string;
    /** scale type of the x-axis
     * see https://vega.github.io/vega/docs/scales/#types for more information
     */
    dimensionScaleType?: ScaleType;
    /**
     * line type of the point border
     * uses a key in the data that will map to the line type scale or a static line type value
     */
    lineType?: LineTypeFacet;
    /**
     * line width of the point border
     * uses a key in the data that will map to the line width scale or a static line width value
     */
    lineWidth?: LineWidthFacet;
    /**
     * point fill and stroke opacity
     * uses a key in the data that will map to the opacity scale or a opacity value
     */
    opacity?: OpacityFacet;
    /**
     * point size
     * uses a key in the data that will map to the size scale (linear) or a static size value
     */
    size?: SymbolSizeFacet;
    chartPopovers?: ChartPopoverOptions[];
    chartTooltips?: ChartTooltipOptions[];
    scatterPaths?: ScatterPathOptions[];
    trendlines?: TrendlineOptions[];
}
type ScatterOptionsWithDefaults = 'chartPopovers' | 'chartTooltips' | 'color' | 'colorScaleType' | 'dimension' | 'dimensionScaleType' | 'lineType' | 'lineWidth' | 'metric' | 'name' | 'opacity' | 'size' | 'scatterPaths' | 'trendlines';
export interface ScatterSpecOptions extends PartiallyRequired<ScatterOptions, ScatterOptionsWithDefaults> {
    colorScheme: ColorScheme;
    highlightedItem?: HighlightedItem;
    idKey: string;
    index: number;
    interactiveMarkName: string | undefined;
}
export {};
//# sourceMappingURL=scatterSpec.types.d.ts.map