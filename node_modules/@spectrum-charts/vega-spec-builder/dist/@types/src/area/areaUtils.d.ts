import { AreaMark, NumericValueRef, ProductionRule } from 'vega';
import { ChartPopoverOptions, ChartTooltipOptions, ColorFacet, ColorScheme, HighlightedItem, ScaleType } from '../types';
export interface AreaMarkOptions {
    color: ColorFacet;
    colorScheme: ColorScheme;
    dimension: string;
    displayOnHover?: boolean;
    highlightedItem?: HighlightedItem;
    isHighlightedByGroup?: boolean;
    isMetricRange?: boolean;
    isStacked: boolean;
    metricStart: string;
    metricEnd: string;
    name: string;
    opacity: number;
    parentName?: string;
    scaleType: ScaleType;
    chartPopovers?: ChartPopoverOptions[];
    chartTooltips?: ChartTooltipOptions[];
}
export declare const getAreaMark: (areaOptions: AreaMarkOptions, dataSource?: string) => AreaMark;
export declare function getAreaOpacity(areaOptions: AreaMarkOptions): ProductionRule<NumericValueRef> | undefined;
export declare const getX: (scaleType: ScaleType, dimension: string) => ProductionRule<NumericValueRef>;
//# sourceMappingURL=areaUtils.d.ts.map