import { Mark, NumericValueRef, SymbolMark } from 'vega';
import { ScatterSpecOptions, SymbolSizeFacet } from '../types';
export declare const addScatterMarks: (state: Mark[], args_0: ScatterSpecOptions) => Mark[];
/**
 * Gets the primary scatter mark
 * @param scatterOptions scatterSpecOptions
 * @returns SymbolMark
 */
export declare const getScatterMark: (options: ScatterSpecOptions) => SymbolMark;
/**
 * Gets the opacity production rule for the scatter mark.
 * This is used for highlighting points on hover and selection.
 * @param scatterOptions ScatterSpecOptions
 * @returns opacity production rule
 */
export declare const getOpacity: (scatterOptions: ScatterSpecOptions) => ({
    test?: string;
} & NumericValueRef)[];
/**
 * Gets the vornoi path mark if there are any interactive children
 * @param scatterOptions ScatterSpecOptions
 * @returns Mark[]
 */
export declare const getScatterHoverMarks: (scatterOptions: ScatterSpecOptions) => Mark[];
/**
 * Gets the size of the select ring based on the size of the scatter points
 * @param size SymbolSizeFacet
 * @returns NumericValueRef
 */
export declare const getSelectRingSize: (size: SymbolSizeFacet) => NumericValueRef;
//# sourceMappingURL=scatterMarkUtils.d.ts.map