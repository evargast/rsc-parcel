import { GroupMark, ProductionRule, TextMark, TextValueRef } from 'vega';
import { DonutSpecOptions, SegmentLabelSpecOptions } from '../types';
/**
 * Gets the marks for the segment label. If there isn't a segment label, an empty array is returned.
 * @param donutOptions
 * @returns GroupMark[]
 */
export declare const getSegmentLabelMarks: (donutOptions: DonutSpecOptions) => GroupMark[];
/**
 * Gets the text mark for the segment label
 * @param segmentLabelOptions
 * @returns TextMark
 */
export declare const getSegmentLabelTextMark: ({ labelKey, value, percent, donutOptions, }: SegmentLabelSpecOptions) => TextMark;
/**
 * Gets the text mark for the segment label values (percent and/or value)
 * @param segmentLabelOptions
 * @returns TextMark[]
 */
export declare const getSegmentLabelValueTextMark: (options: SegmentLabelSpecOptions) => TextMark[];
/**
 * Gets the text value ref for the segment label values (percent and/or value)
 * @param segmentLabelOptions
 * @returns TextValueRef
 */
export declare const getSegmentLabelValueText: ({ donutOptions, percent, value, valueFormat, }: SegmentLabelSpecOptions) => ProductionRule<TextValueRef> | undefined;
//# sourceMappingURL=segmentLabelUtils.d.ts.map