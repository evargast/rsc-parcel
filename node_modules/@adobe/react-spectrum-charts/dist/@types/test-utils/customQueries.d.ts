declare const queryAllMarksByGroupName: (container: HTMLElement, markName: string, tagName?: string) => HTMLElement[];
declare const queryMarksByGroupName: import("@testing-library/react").QueryBy<[string, (string | undefined)?]>, getAllMarksByGroupName: import("@testing-library/react").GetAllBy<[string, (string | undefined)?]>, getMarksByGroupName: import("@testing-library/react").GetBy<[string, (string | undefined)?]>, findAllMarksByGroupName: import("@testing-library/react").FindAllBy<[string, (string | undefined)?]>, findMarksByGroupName: import("@testing-library/react").FindBy<[string, (string | undefined)?]>;
export { queryMarksByGroupName, queryAllMarksByGroupName, getMarksByGroupName, getAllMarksByGroupName, findAllMarksByGroupName, findMarksByGroupName, };
declare const queryAllLegendEntries: (container: HTMLElement) => HTMLElement[];
declare const queryLegendEntries: import("@testing-library/react").QueryBy<[]>, getAllLegendEntries: import("@testing-library/react").GetAllBy<[]>, getLegendEntries: import("@testing-library/react").GetBy<[]>, findAllLegendEntries: import("@testing-library/react").FindAllBy<[]>, findLegendEntries: import("@testing-library/react").FindBy<[]>;
export { queryLegendEntries, queryAllLegendEntries, getLegendEntries, getAllLegendEntries, findAllLegendEntries, findLegendEntries, };
declare const queryAllLegendSymbols: (container: HTMLElement) => HTMLElement[];
declare const queryLegendSymbols: import("@testing-library/react").QueryBy<[]>, getAllLegendSymbols: import("@testing-library/react").GetAllBy<[]>, getLegendSymbols: import("@testing-library/react").GetBy<[]>, findAllLegendSymbols: import("@testing-library/react").FindAllBy<[]>, findLegendSymbols: import("@testing-library/react").FindBy<[]>;
export { queryLegendSymbols, queryAllLegendSymbols, getLegendSymbols, getAllLegendSymbols, findAllLegendSymbols, findLegendSymbols, };
declare const queryAllAxisLabels: (container: HTMLElement) => HTMLElement[];
declare const queryAxisLabels: import("@testing-library/react").QueryBy<[]>, getAllAxisLabels: import("@testing-library/react").GetAllBy<[]>, getAxisLabels: import("@testing-library/react").GetBy<[]>, findAllAxisLabels: import("@testing-library/react").FindAllBy<[]>, findAxisLabels: import("@testing-library/react").FindBy<[]>;
export { queryAxisLabels, queryAllAxisLabels, getAxisLabels, getAllAxisLabels, findAllAxisLabels, findAxisLabels };
//# sourceMappingURL=customQueries.d.ts.map