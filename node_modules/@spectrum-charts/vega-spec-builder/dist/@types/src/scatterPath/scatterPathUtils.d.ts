import { GroupMark, NumericValueRef, Scale, TrailMark } from 'vega';
import { LineWidthFacet, ScatterPathOptions, ScatterPathSpecOptions, ScatterSpecOptions } from '../types';
/**
 * Gets the path spec options, applying defaults.
 * @param scatterPathOptions
 * @param index
 * @param markName
 * @param colorScheme
 * @returns ScatterPathSpecOptions
 */
export declare const getScatterPathSpecOptions: ({ color, groupBy, pathWidth, opacity, ...scatterPathOptions }: ScatterPathOptions, index: number, { color: scatterColor, colorScheme, dimension, dimensionScaleType, lineType, metric, name: scatterName, opacity: scatterOpacity, size, }: ScatterSpecOptions) => ScatterPathSpecOptions;
/**
 * Gets all the paths on a scatter
 * @param scatterOptions
 * @returns ScatterPathSpecOptions[]
 */
export declare const getScatterPaths: (scatterOptions: ScatterSpecOptions) => ScatterPathSpecOptions[];
/**
 * Sets the scales up for the scatter path marks
 * Note: This mutates the scales array so it should only be called from an immer produce function
 * @param scales
 * @param scatterOptions
 */
export declare const setScatterPathScales: (scales: Scale[], scatterOptions: ScatterSpecOptions) => void;
export declare const getScatterPathMarks: (scatterOptions: ScatterSpecOptions) => GroupMark[];
export declare const getScatterPathTrailMark: ({ color, colorScheme, dimension, dimensionScaleType, pathWidth, metric, name, opacity, }: ScatterPathSpecOptions) => TrailMark;
/**
 * Gets the opacity production rule for the scatterPath trail marks.
 * This is used for highlighting trails on hover and selection.
 * @param scatterOptions ScatterSpecOptions
 * @returns opacity production rule
 */
export declare const getOpacity: () => ({
    test?: string;
} & NumericValueRef)[];
export declare const getPathWidth: (pathWidth: LineWidthFacet) => NumericValueRef;
//# sourceMappingURL=scatterPathUtils.d.ts.map