import { GroupMark, Mark, Scale } from 'vega';
import { BarSpecOptions } from '../types';
/**
 * Generates the trellis group mark
 * @param options
 * @param marks visualization marks (bar, line, etc)
 * @param repeatedScale this is the scale that is repeated for each trellis, for example: y scale for vertical trellis, x scale for horizontal trellis
 * @returns
 */
export declare const getTrellisGroupMark: (options: BarSpecOptions, marks: Mark[], repeatedScale: Scale) => GroupMark;
export declare const addTrellisScale: (scales: Scale[], options: BarSpecOptions) => void;
export declare const getTrellisedEncodeEntries: (options: BarSpecOptions) => import("vega", { with: { "resolution-mode": "import" } }).RectEncodeEntry;
export interface BarTrellisProperties {
    facetName: string;
    scaleName: 'xTrellisBand' | 'yTrellisBand';
    markName: 'xTrellisGroup' | 'yTrellisGroup';
    rangeScale: 'width' | 'height';
    axis: 'x' | 'y';
    paddingInner: number;
}
export declare const getTrellisProperties: ({ trellisOrientation, name, trellisPadding, }: BarSpecOptions) => BarTrellisProperties;
export declare const isTrellised: (options: BarSpecOptions) => boolean;
//# sourceMappingURL=trellisedBarUtils.d.ts.map