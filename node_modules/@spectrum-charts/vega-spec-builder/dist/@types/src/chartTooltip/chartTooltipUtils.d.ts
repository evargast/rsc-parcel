import { Data, FormulaTransform, NumericValueRef, Signal } from 'vega';
import { AreaSpecOptions, BarSpecOptions, ChartTooltipOptions, ChartTooltipSpecOptions, DonutSpecOptions, LineSpecOptions, ScatterSpecOptions } from '../types';
type TooltipParentOptions = AreaSpecOptions | BarSpecOptions | DonutSpecOptions | LineSpecOptions | ScatterSpecOptions;
/**
 * gets all the tooltips
 * @param markOptions
 * @returns
 */
export declare const getTooltips: (markOptions: TooltipParentOptions) => ChartTooltipSpecOptions[];
/**
 * Applies all defaults to ChartTooltipOptions
 * @param chartTooltipOptions
 * @returns ChartTooltipSpecOptions
 */
export declare const applyTooltipPropDefaults: ({ highlightBy, ...options }: ChartTooltipOptions, markName: string) => ChartTooltipSpecOptions;
/**
 * Sets all the data needed for tooltips
 *
 * NOTE: this function mutates the data object so it should only be called from a produce function
 * @param data
 * @param chartTooltipOptions
 */
export declare const addTooltipData: (data: Data[], markOptions: TooltipParentOptions, addHighlightedData?: boolean) => void;
/**
 * Gets the group id transform
 * @param highlightBy
 * @param markName
 * @returns FormulaTransform
 */
export declare const getGroupIdTransform: (highlightBy: string[], markName: string) => FormulaTransform;
export declare const isHighlightedByGroup: (markOptions: TooltipParentOptions) => boolean;
/**
 * Tooltip highlights by item or dimension
 * @param markOptions
 * @returns
 */
export declare const isHighlightedByDimension: (markOptions: TooltipParentOptions) => boolean;
/**
 * adds the appropriate signals for tooltips
 *
 * NOTE: this function mutates the signals array so it should only be called from a produce function
 * @param signals
 * @param markOptions
 */
export declare const addTooltipSignals: (signals: Signal[], markOptions: TooltipParentOptions) => void;
/**
 * Adds the appropriate opacity rules to the beginning of the opacityRules array
 *
 * NOTE: this function mutates the opacityRules array so it should only be called from a produce function
 * @param opacityRules
 * @param markOptions
 */
export declare const addHighlightMarkOpacityRules: (opacityRules: ({
    test?: string;
} & NumericValueRef)[], markOptions: TooltipParentOptions) => void;
export {};
//# sourceMappingURL=chartTooltipUtils.d.ts.map