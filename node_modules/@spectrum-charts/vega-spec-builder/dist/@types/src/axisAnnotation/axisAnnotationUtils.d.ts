import { Axis, Data, Mark, ScaleType, Signal } from 'vega';
import { AxisAnnotationOptions, AxisAnnotationSpecOptions, AxisSpecOptions, ColorScheme, Position } from '../types';
/**
 * Adds the required data for axis annotations.
 *
 * NOTE: this function should only be called from within a produce with data as the root state since it directly
 * mutates the data array
 * @param data
 * @param axisAnnotationOptions
 */
export declare const addAxisAnnotationData: (data: Data[], { name, dataKey, color, colorScheme, options, format }: AxisAnnotationSpecOptions) => void;
/**
 * Adds the required signals for axis annotations.
 *
 * NOTE: this function should only be called from within a produce with signals as the root state since it directly
 * mutates the signals array
 * @param signals
 * @param param1
 */
export declare const addAxisAnnotationSignals: (signals: Signal[], { name, format }: AxisAnnotationSpecOptions) => void;
/**
 * Adds the required marks for axis annotations.
 *
 * NOTE: this function should only be called from within a produce with marks as the root state since it directly
 * mutates the marks array
 * @param marks
 * @param param1
 */
export declare const addAxisAnnotationMarks: (marks: Mark[], axisAnnotationOptions: AxisAnnotationSpecOptions, scaleName: string) => void;
/**
 * NOTE: this function should only be called from within a produce with marks as the root state since it directly
 * mutates the marks array
 * @param marks
 * @param param1
 */
export declare const getAxisAnnotationSummaryMarks: ({ chartPopovers, name, offset }: AxisAnnotationSpecOptions) => Mark;
/**
 * Adds the required marks for axis annotations that support time series axis.
 * @param marks
 * @param param1
 */
export declare const getAxisAnnotationSpanMarks: ({ chartPopovers, name, offset }: AxisAnnotationSpecOptions, scaleName: string) => Mark;
/**
 * Adds the required axis for axis annotations.
 *
 * NOTE: this function should only be called from within a produce with axes as the root state since it directly
 * mutates the axes array
 * @param axes
 * @param param1
 */
export declare const addAxisAnnotationAxis: (axes: Axis[], { offset }: AxisAnnotationSpecOptions, scaleName: any) => void;
export declare const getAxisAnnotationsFromChildren: ({ axisAnnotations, colorScheme, name: axisName, position, scaleType, }: AxisSpecOptions & {
    scaleType: ScaleType;
}) => AxisAnnotationSpecOptions[];
export declare const applyDefaultAxisAnnotationOptions: ({ chartPopovers, chartTooltips, name, format, offset, color, dataKey, options, }: AxisAnnotationOptions, annotationIndex: number, axisName: string, colorScheme: ColorScheme, scaleType: ScaleType) => AxisAnnotationSpecOptions;
export declare const axisTypeSupportsAxisAnnotations: (position: Position | undefined) => boolean;
//# sourceMappingURL=axisAnnotationUtils.d.ts.map