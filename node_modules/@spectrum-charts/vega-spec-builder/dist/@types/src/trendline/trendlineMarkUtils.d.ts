import { EncodeEntry, GroupMark, LineMark, NumericValueRef, RuleMark } from 'vega';
import { Orientation, ScaleType, TrendlineSpecOptions } from '../types';
import { TrendlineParentOptions } from './trendlineUtils';
export declare const getTrendlineMarks: (markOptions: TrendlineParentOptions) => (GroupMark | RuleMark)[];
/**
 * gets the trendline rule mark used for aggregate methods (mean, median)
 * @param markOptions
 * @param trendlineOptions
 * @returns rule mark
 */
export declare const getTrendlineRuleMark: (markOptions: TrendlineParentOptions, trendlineOptions: TrendlineSpecOptions) => RuleMark;
/**
 * gets the production rules for the y and y2 encoding of a rule mark
 * @param dimensionExtent
 * @param dimension
 * @param orientation
 * @returns x production rules
 */
export declare const getRuleYEncodings: (dimensionExtent: TrendlineSpecOptions['dimensionExtent'], dimension: string, orientation: Orientation) => EncodeEntry;
/**
 * gets the production rules for the x and x2 encoding of a rule mark
 * @param dimensionExtent
 * @param dimension
 * @param scaleType
 * @param orientation
 * @returns x production rules
 */
export declare const getRuleXEncodings: (dimensionExtent: TrendlineSpecOptions['dimensionExtent'], dimension: string, scaleType: ScaleType, orientation: Orientation) => EncodeEntry;
/**
 * Gets the production rule for the start dimension extent of a trendline
 * @param startDimensionExtent
 * @param dimension
 * @param scale
 * @param axis
 * @returns
 */
export declare const getStartDimensionExtentProductionRule: (startDimensionExtent: number | 'domain' | null, dimension: string, scale: string, axis: 'x' | 'y') => NumericValueRef;
/**
 * gets the production rule for the end dimension extent of a trendline
 * @param endDimensionExtent
 * @param dimension
 * @param scale
 * @param axis
 * @returns
 */
export declare const getEndDimensionExtentProductionRule: (endDimensionExtent: number | 'domain' | null, dimension: string, scale: string, axis: 'x' | 'y') => NumericValueRef;
/**
 * gets the trendline line mark used for regression and window methods
 * @param markOptions
 * @param trendlineOptions
 * @returns
 */
export declare const getTrendlineLineMark: (markOptions: TrendlineParentOptions, trendlineOptions: TrendlineSpecOptions) => LineMark;
/**
 * gets the production rule for the y encoding of a line mark
 * @param trendlineDimension
 * @param orientation
 * @returns
 */
export declare const getLineYProductionRule: (trendlineDimension: string, orientation: Orientation) => NumericValueRef;
/**
 * gets the production rule for the x encoding of a line mark
 * @param trendlineDimension
 * @param scaleType
 * @param orientation
 * @param isDimensionNormalized
 * @returns
 */
export declare const getLineXProductionRule: (trendlineDimension: string, scaleType: ScaleType, orientation: Orientation, isDimensionNormalized: boolean) => NumericValueRef;
//# sourceMappingURL=trendlineMarkUtils.d.ts.map