import { ColorScheme } from '../chartSpec.types';
import { ChartPopoverOptions } from '../dialogs/chartPopoverSpec.types';
import { ChartTooltipOptions } from '../dialogs/chartTooltipSpec.types';
import { PartiallyRequired } from '../specUtil.types';
import { SpectrumColor } from '../spectrumVizColor.types';
export type AxisAnnotationFormat = 'span' | 'summary';
export type Option = {
    /** The id of the annotation to apply these options to */
    id: string;
    /** The color of the icon and range lines  */
    color?: SpectrumColor | string;
};
export interface AxisAnnotationOptions {
    /** the color to use for the annotation icon and span lines if a color isn't specified in options or multiple annotations fall in the same icon */
    color?: SpectrumColor | string;
    /** data field where the annotation ids are listed for each data point */
    dataKey?: string;
    /** show annotations as a horizontal span of icons or a single summary icon */
    format?: AxisAnnotationFormat;
    /** unique name for this annotation */
    name?: string;
    /** how far from the bottom of the chart do the annotations display */
    offset?: number;
    /** options specific to each annotation in the data */
    options?: Option[];
    chartPopovers?: ChartPopoverOptions[];
    chartTooltips?: ChartTooltipOptions[];
}
type AxisAnnotationOptionsWithDefaults = 'chartPopovers' | 'chartTooltips' | 'color' | 'dataKey' | 'format' | 'name' | 'offset' | 'options';
export interface AxisAnnotationSpecOptions extends PartiallyRequired<AxisAnnotationOptions, AxisAnnotationOptionsWithDefaults> {
    axisName: string;
    colorScheme: ColorScheme;
}
export {};
//# sourceMappingURL=axisAnnotationSpec.types.d.ts.map