import { ColorScheme, HighlightedItem } from '../chartSpec.types';
import { ChartPopoverOptions } from '../dialogs/chartPopoverSpec.types';
import { ChartTooltipOptions } from '../dialogs/chartTooltipSpec.types';
import { PartiallyRequired, ScaleType } from '../specUtil.types';
export interface AreaOptions {
    markType: 'area';
    /** Sets the name of the component. */
    name?: string;
    /** Key in the data that is used as the color facet */
    color?: string;
    /** Key in the data that is used as the metric */
    metric?: string;
    /** Data field that the metric is trended against (x-axis for horizontal orientation) */
    dimension?: string;
    /** Optional field used to set the stack order of the area (higher order = stacked on top/right) */
    order?: string;
    /** Optional field used to set the area opacity */
    opacity?: number;
    /** Sets the horizontal padding, this is a ratio from 0 to 1 for categorical scales (point) and a pixel value for continuous scales (time, linear) */
    padding?: number;
    /** Sets the type of scale that should be used for the trend */
    scaleType?: ScaleType;
    /** Data field for the start of the area */
    metricStart?: string;
    /** Data field for the end of the area */
    metricEnd?: string;
    /** Popover that is shown when hovering over the area */
    chartPopovers?: ChartPopoverOptions[];
    /** Tooltip that is shown when hovering over the area */
    chartTooltips?: ChartTooltipOptions[];
}
type AreaOptionsWithDefaults = 'chartTooltips' | 'chartPopovers' | 'color' | 'dimension' | 'metric' | 'name' | 'opacity' | 'scaleType';
export interface AreaSpecOptions extends PartiallyRequired<AreaOptions, AreaOptionsWithDefaults> {
    colorScheme: ColorScheme;
    highlightedItem?: HighlightedItem;
    idKey: string;
    index: number;
}
export {};
//# sourceMappingURL=areaSpec.types.d.ts.map